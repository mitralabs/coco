services:

  transcription:
    build:
      context: ./transcription/whisper_openai
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./transcription/whisper_openai/app:/app
      - ./_data:/data
    environment:
      - API_KEY=test
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "curl", "-f", "-X", "GET", "-H", "X-API-Key: test", "http://localhost:8000/test" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  chunking:
    build:
      context: ./chunking
      dockerfile: Dockerfile
    ports:
      - "8001:8000"
    volumes:
      - ./chunking/app:/app
      - ./_data:/data
    environment:
      - API_KEY=test
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "curl", "-f", "-X", "GET", "-H", "X-API-Key: test", "http://localhost:8000/test" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  embedding:
    build:
      context: ./embedding
      dockerfile: Dockerfile
    ports:
      - "8002:8000"
    volumes:
      - ./embedding/app:/app
    environment:
      - API_KEY=test
      #- BASE_URL=https://jetson-ollama.mitra-labs.ai/api
      - BASE_URL=http://192.168.178.34:11434/api
      #- BASE_URL=http://host.docker.internal:11434/api
      - OLLAMA_MODEL=bge-m3:latest #Alternative: nomic-embed-text
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "curl", "-f", "-X", "GET", "-H", "X-API-Key: test", "http://localhost:8000/test" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  db-api:
    build:
      context: ./db_api
      dockerfile: Dockerfile
    ports:
      - "8003:8000"
    volumes:
      - ./db_api/app:/app
      - ./_data:/data
    environment:
      - API_KEY=test
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=coco
      - POSTGRES_HOST=db
      - VEKTOR_DIM = 1024 # BGE-M3 // Nomic Embedding = 768
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "curl", "-f", "-X", "GET", "-H", "X-API-Key: test", "http://localhost:8000/test" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    depends_on:
      db:
        condition: service_healthy
      embedding:
        condition: service_healthy

  db:
    image: pgvector/pgvector:0.8.0-pg17
    volumes:
      - ./_data/db:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=coco
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 15s
