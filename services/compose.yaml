services:

  transcription:
    build:
      context: ./transcription/whisper_cpp
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./transcription/whisper_cpp/app:/app
      - ./_data:/data
    environment:
      - API_KEY=test
      - GGML_MODEL=ggml-large-v3-turbo-german
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "curl", "-f", "-X", "GET", "-H", "X-API-Key: test", "http://localhost:8000/test" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  chunking:
    build:
      context: ./chunking
      dockerfile: Dockerfile
    ports:
      - "8001:8000"
    volumes:
      - ./chunking/app:/app
      - ./_data:/data
    environment:
      - API_KEY=test
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "curl", "-f", "-X", "GET", "-H", "X-API-Key: test", "http://localhost:8000/test" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  db-api:
    build:
      context: ./db_api
      dockerfile: Dockerfile
    ports:
      - "8003:8000"
    volumes:
      - ./db_api/app:/app
      - ./_data:/data
    environment:
      - API_KEY=test
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=coco
      - POSTGRES_HOST=db
      - VEKTOR_DIM=768 # BGE-M3 // Nomic Embedding = 768
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "curl", "-f", "-X", "GET", "-H", "X-API-Key: test", "http://localhost:8000/test" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    depends_on:
      db:
        condition: service_healthy

  db:
    image: pgvector/pgvector:0.8.0-pg17
    volumes:
      - ./_data/db:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=coco
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 15s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "8002:7860"
    volumes:
      - ../python_sdk:/app/python_sdk
    env_file:
      - ".env"
    environment:
      - GRADIO_SERVER_NAME=0.0.0.0
    restart: unless-stopped
    depends_on:
      transcription:
        condition: service_healthy
      chunking:
        condition: service_healthy
      db-api:
        condition: service_healthy

  orchestrator:
    build:
      context: ./orchestrator
      dockerfile: Dockerfile
    ports:
      - "3030:8000"
    volumes:
      - ../python_sdk:/app/python_sdk
      - ./_data/audio_files:/data
    environment:
      - API_KEY=test
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "curl", "-f", "-X", "GET", "-H", "X-API-Key: test", "http://localhost:8000/test" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    depends_on:
      transcription:
        condition: service_healthy
      chunking:
        condition: service_healthy
      db-api:
        condition: service_healthy
